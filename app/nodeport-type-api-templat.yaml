---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadbalancer-type-api
  annotations:
    app: loadbalancer-type-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: loadbalancer-type-api
  template:
    metadata:
      labels:
        app: loadbalancer-type-api
    spec:
      containers:
        - name: loadbalancer-type-api
          image: gcr.io/<project-id>/python-ping-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: "0.25"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: loadbalancer-type-api
  annotations:
    app: loadbalancer-type-api
    cloud.google.com/neg: '{"ingress": false}'
    # cloud.google.com/backend-config: '{"default": "loadbalancer-type-api-backend-config"}'
spec:
  selector:
    app: loadbalancer-type-api
  # type: NodePort
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8000
      nodePort: 30000
      protocol: TCP
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: loadbalancer-type-api-ingress
#   annotations:
#     app: loadbalancer-type-api
#     kubernetes.io/ingress.class: gce
# spec:
#   rules:
#   - http:
#         paths:
#           - path: /*
#             pathType: ImplementationSpecific
#             backend:
#               service:
#                 name: loadbalancer-type-api
#                 port:
#                   number: 8000
# ---
# apiVersion: cloud.google.com/v1
# kind: BackendConfig
# metadata:
#   name: loadbalancer-type-api-backend-config
# spec:
#   healthCheck:
#     checkIntervalSec: 10
#     timeoutSec: 10
#     healthyThreshold: 1
#     unhealthyThreshold: 3
#     port: 8000
#     type: HTTP
#     requestPath: /ping
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: 'loadbalancer-type-api-hpa'
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: 'loadbalancer-type-api'
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50